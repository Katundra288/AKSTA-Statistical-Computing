labs(
title = "Scatterplot of Median Age and Migration Rate for all Countries",
x = "Median Age",
y = "Migration Rate",
size = "Population",
color = "Continent"
) +
theme(legend.position = "none")
interactive_plot_l <- ggplotly(world_plot_l, tooltip = c("text", "x", "y", "size"))
interactive_plot_l
scatterplot_age_umeployment <- ggplot(europe_data, aes(x = Median_Age, y = Migration_rate, size = Population)) +
geom_point(alpha = 0.7) +
labs(
title="Scatterplot Median Age and Migration Rate Europe",
x = "Median Age",
y = "Migration Rate"
)
theme(legend.position = "none")
print(scatterplot_age_umeployment)
scatterplot_age_umeployment <- ggplot(europe_data, aes(x = Median_Age, y = Migration_rate, size = Population)) +
geom_point(alpha = 0.7) +
labs(
title="Scatterplot Median Age and Migration Rate Europe",
x = "Median Age",
y = "Migration Rate"
)
theme(legend.position = "none")
print(scatterplot_age_umeployment)
scatterplot_age_umeployment <- ggplot(europe_data, aes(x = Median_Age, y = Migration_rate, size = Population)) +
geom_point(alpha = 0.7) +
labs(
title="Scatterplot Median Age and Migration Rate Europe",
x = "Median Age",
y = "Migration Rate"
) +
theme(legend.position = "none")
print(scatterplot_age_umeployment)
world_plot_l <- ggplot(merged_data, aes(x = Median_Age, y = Migration_rate, size = Population)) +
geom_point(alpha = 0.7) +
labs(
title = "Scatterplot of Median Age and Migration Rate for all Countries",
x = "Median Age",
y = "Migration Rate",
size = "Population",
color = "Continent",
text= Country
) +
theme(legend.position = "none")
world_plot_l <- ggplot(merged_data, aes(x = Median_Age, y = Migration_rate, size = Population)) +
geom_point(alpha = 0.7) +
labs(
title = "Scatterplot of Median Age and Migration Rate for all Countries",
x = "Median Age",
y = "Migration Rate",
size = "Population",
color = "Continent",
) +
theme(legend.position = "none") +
text=Country
unique(merged_data$Continent)
unique(merged_data$continent)
world_plot_l <- ggplot(merged_data, aes(x = Median_Age, y = Migration_rate, size = Population)) +
geom_point(alpha = 0.7) +
labs(
title = "Scatterplot of Median Age and Migration Rate for all Countries",
x = "Median Age",
y = "Migration Rate",
size = "Population",
color = "continent",
) +
theme(legend.position = "none")
interactive_plot_l <- ggplotly(world_plot_l, tooltip = c("text", "x", "y", "size"))
interactive_plot_l
world_plot_l <- ggplot(merged_data, aes(x = Median_Age, y = Migration_rate, size = Population, color = as.factor(continent))) +
geom_point(alpha = 0.7) +
labs(
title = "Scatterplot of Median Age and Migration Rate for all Countries",
x = "Median Age",
y = "Migration Rate",
size = "Population",
color = "continent",
) +
theme(legend.position = "none")
interactive_plot_l <- ggplotly(world_plot_l, tooltip = c("text", "x", "y", "size"))
interactive_plot_l
world_plot_l <- ggplot(merged_data, aes(x = Median_Age, y = Migration_rate, size = Population, color = as.factor(continent),
text = paste("Country: ", Country, "<br>Median Age: ", Median_Age, "<br>Net Migration Rate: ",
Net_Migration_Rate, "<br>Population: ", Population))) +
geom_point(alpha = 0.7) +
labs(
title = "Scatterplot of Median Age and Migration Rate for all Countries",
x = "Median Age",
y = "Migration Rate",
size = "Population",
color = "continent",
) +
theme(legend.position = "none")
interactive_plot_l <- ggplotly(world_plot_l, tooltip = c("text", "x", "y", "size"))
world_plot_l <- ggplot(merged_data, aes(x = Median_Age, y = Migration_rate, size = Population, color = as.factor(continent),
text = paste("Country: ", Country, "<br>Median Age: ", Median_Age, "<br>Net Migration Rate: ",
Migration_rate, "<br>Population: ", Population))) +
geom_point(alpha = 0.7) +
labs(
title = "Scatterplot of Median Age and Migration Rate for all Countries",
x = "Median Age",
y = "Migration Rate",
size = "Population",
color = "continent",
) +
theme(legend.position = "none")
interactive_plot_l <- ggplotly(world_plot_l, tooltip = c("text", "x", "y", "size"))
interactive_plot_l
world_plot_l <- ggplot(merged_data, aes(x = Median_Age, y = Migration_rate, size = Population, color = as.factor(continent),
text = Country)) +
geom_point(alpha = 0.7) +
labs(
title = "Scatterplot of Median Age and Migration Rate for all Countries",
x = "Median Age",
y = "Migration Rate",
size = "Population",
color = "continent",
) +
theme(legend.position = "none")
interactive_plot_l <- ggplotly(world_plot_l, tooltip = c("text", "x", "y", "size"))
interactive_plot_l
ggparcoord(merged_data,
columns = c("Median_Age", "Youth_unemployment_rate", "Migration_rate"),
groupColumn = "Income_class",
showPoints = TRUE,
scale = "globalminmax")
#scale = "globalminmax")
ggparcoord(merged_data,
columns = c("Median_Age", "Youth_unemployment_rate", "Migration_rate"),
groupColumn = "Income_class",
showPoints = TRUE)
ggparcoord(merged_data,
columns = c("Median_Age", "Youth_unemployment_rate", "Migration_rate"),
groupColumn = "Income_class")
ggparcoord(merged_data,
columns = c("Median_Age", "Youth_unemployment_rate", "Migration_rate"),
groupColumn = "Income_class",
order = c("Median_Age", "Youth_unemployment_rate", "Migration_rate"))
ggparcoord(merged_data,
columns = c("Median_Age", "Youth_unemployment_rate", "Migration_rate"),
groupColumn = "Income_class")
ggparcoord(merged_data,
columns = c("Median_Age", "Youth_unemployment_rate", "Migration_rate"),
groupColumn = "Income_class",
order = c("Median_Age", "Youth_unemployment_rate", "Migration_rate"))
ggparcoord(merged_data,
columns = c("Median_Age", "Youth_unemployment_rate", "Migration_rate"),
groupColumn = "Income_class",
order = "anyClass")
ggparcoord(merged_data,
columns = c("Median_Age", "Youth_unemployment_rate", "Migration_rate"),
groupColumn = "Income_class",
order = c("Median_Age", "Youth_unemployment_rate", "Migration_rate"),
showPoints = TRUE,)
ggparcoord(merged_data,
columns = c("Median_Age")#, "Youth_unemployment_rate", "Migration_rate"),
groupColumn = "Income_class",
ggparcoord(merged_data,
columns = c("Median_Age"),#, "Youth_unemployment_rate", "Migration_rate"),
groupColumn = "Income_class",
order = c("Median_Age"),#, "Youth_unemployment_rate", "Migration_rate"),
showPoints = TRUE,)
ggparcoord(merged_data,
columns = c("Median_Age", "Youth_unemployment_rate", "Migration_rate"),
groupColumn = "Income_class",
order = 6:8,
showPoints = TRUE,)
ggparcoord(merged_data,
columns = c("Median_Age", "Youth_unemployment_rate", "Migration_rate"),
groupColumn = "Income_class",
order = 6:8,
showPoints = TRUE,
scale = "globalminmax")
ggparcoord(europe_data,
columns = c("Median_Age", "Youth_unemployment_rate", "Migration_rate"),
groupColumn = "Income_class",
order = 6:8,
showPoints = TRUE,
scale = "globalminmax")
ggparcoord(merged_data,
columns = c("Median_Age", "Youth_unemployment_rate", "Migration_rate"),
groupColumn = "Income_class",
order = 6:8,
showPoints = TRUE,
scale = "globalminmax")
ggparcoord(merged_data,
columns = c("Median_Age", "Youth_unemployment_rate", "Migration_rate"),
groupColumn = "Income_class",
order = 6:8,
showPoints = TRUE,
scale = "globalminmax",
title = "Parallel Coordinate Plot of all Countries")
ggparcoord(merged_data,
columns = c("Median_Age", "Youth_unemployment_rate", "Migration_rate"),
groupColumn = "Income_class",
order = 6:8,
showPoints = TRUE,
scale = "globalminmax",
title = "Parallel Coordinate Plot of all Countries",
alphaLines = 0.3)
ggparcoord(merged_data,
columns = c("Median_Age", "Youth_unemployment_rate", "Migration_rate"),
groupColumn = "Income_class",
order = 6:8,
showPoints = TRUE,
scale = "globalminmax",
title = "Parallel Coordinate Plot of all Countries",
alphaLines = 0.5)
ggparcoord(merged_data,
columns = c("Median_Age", "Youth_unemployment_rate", "Migration_rate"),
groupColumn = "Income_class",
order = 6:8,
showPoints = TRUE,
scale = "uniminmax",
title = "Parallel Coordinate Plot of all Countries",
alphaLines = 0.5)
ggparcoord(merged_data,
columns = c("Median_Age", "Youth_unemployment_rate", "Migration_rate"),
groupColumn = "Income_class",
order = 6:8,
showPoints = TRUE,
scale = "std",
title = "Parallel Coordinate Plot of all Countries",
alphaLines = 0.5)
ggparcoord(merged_data,
columns = c("Median_Age", "Youth_unemployment_rate", "Migration_rate"),
groupColumn = "Income_class",
order = 6:8,
showPoints = TRUE,
scale = "center",
title = "Parallel Coordinate Plot of all Countries",
alphaLines = 0.5)
ggparcoord(merged_data,
columns = c("Median_Age", "Youth_unemployment_rate", "Migration_rate"),
groupColumn = "Income_class",
order = 6:8,
showPoints = TRUE,
scale = "globalminmax",
title = "Parallel Coordinate Plot of all Countries",
alphaLines = 0.5)
ggparcoord(merged_data,
columns = c("Median_Age", "Youth_unemployment_rate", "Migration_rate"),
groupColumn = "Income_class",
order = 6:8,
showPoints = TRUE,
#scale = "globalminmax",
title = "Parallel Coordinate Plot of all Countries",
alphaLines = 0.5)
ggparcoord(merged_data,
columns = c("Median_Age", "Youth_unemployment_rate", "Migration_rate"),
groupColumn = "Income_class",
order = 6:8,
showPoints = TRUE,
scale = "globalminmax",
title = "Parallel Coordinate Plot of all Countries",
alphaLines = 0.5)
install.packages("rworldmap")
library(rworldmap)
data(countryExData)
countryExData
merged_o <- countryExData %>%
left_join(merged_data, by = c("ISO3V10" = "ISO_Code_3"))
merged_o
mapCountryData(merged_o, nameColumnToPlot="Median_Age", mapTitle="Median Age by Country", catMethod="fixedWidth", missingCountryCol="gray50")
par(mai=c(0,0,0.2,0),xaxs="i",yaxs="i")
mapCountryData(merged_o, nameColumnToPlot="Median_Age", mapTitle="Median Age by Country", catMethod="fixedWidth", missingCountryCol="gray50")
sPDF <-joinCountryData2Map( countryExData
+ ,joinCode= "ISO3"
sPDF <-joinCountryData2Map(countryExData, joinCode= "ISO3", nameJoinColumn="ISO3V10")
sPDF <-joinCountryData2Map(merged_o, joinCode= "ISO3", nameJoinColumn="ISO3V10")
sPDF <-joinCountryData2Map(merged_o, joinCode= "ISO3", nameJoinColumn="ISO3V10")
par(mai=c(0,0,0.2,0),xaxs="i",yaxs="i")
mapCountryData(merged_o, nameColumnToPlot="Median_Age", mapTitle="Median Age by Country", catMethod="fixedWidth", missingCountryCol="gray50")
data(countryExData)
head(countryExData)
merged_o <- countryExData %>%
left_join(merged_data, by = c("ISO3V10" = "ISO_Code_3"))
merged_o
sPDF <-joinCountryData2Map(merged_o, joinCode= "ISO3", nameJoinColumn="ISO3V10")
par(mai=c(0,0,0.2,0),xaxs="i",yaxs="i")
mapCountryData(merged_o, nameColumnToPlot="Median_Age", mapTitle="Median Age by Country", catMethod="fixedWidth", missingCountryCol="gray50")
mapCountryData(sPDF, nameColumnToPlot="Median_Age", mapTitle="Median Age by Country", catMethod="fixedWidth", missingCountryCol="gray50")
sPDF <-joinCountryData2Map(merged_o)
par(mai=c(0,0,0.2,0),xaxs="i",yaxs="i")
mapCountryData(sPDF, nameColumnToPlot="Median_Age", mapTitle="Median Age by Country", catMethod="fixedWidth", missingCountryCol="gray50")
data(countryExData)
merged_o <- countryExData %>%
left_join(merged_data, by = c("ISO3V10" = "ISO_Code_3"))
sPDF <-joinCountryData2Map(merged_o)
par(mai=c(0,0,0.2,0),xaxs="i",yaxs="i")
mapCountryData(sPDF, nameColumnToPlot="Median_Age", mapTitle="Median Age by Country", catMethod="fixedWidth", missingCountryCol="gray50")
merged_data
sPDF
sPDF
merged_o
merged_o <- merged_data %>%
left_join(countryExData, by = c("ISO_Code_3" = "ISO3V10"))
sPDF <-joinCountryData2Map(merged_o)
merged_o <- merged_data %>%
full_join(countryExData, by = c("ISO_Code_3" = "ISO3V10"))
sPDF <-joinCountryData2Map(merged_o)
par(mai=c(0,0,0.2,0),xaxs="i",yaxs="i")
mapCountryData(sPDF, nameColumnToPlot="Median_Age", mapTitle="Median Age by Country", catMethod="fixedWidth", missingCountryCol="gray50")
merged_o
countryExData
countryExData
merged_o <- countryExData %>%
left_join(merged_data, by = c("ISO3V10" = "ISO_Code_3"))
sPDF <-joinCountryData2Map(merged_o)
par(mai=c(0,0,0.2,0),xaxs="i",yaxs="i")
mapCountryData(sPDF, nameColumnToPlot="Median_Age", mapTitle="Median Age by Country", catMethod="fixedWidth", missingCountryCol="gray50")
merged_o
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(tidyr)
library(dplyr)
library(readxl)
library(data.table)
library(knitr)
require(stringr)
library(ggplot2)
library(plotly)
library(htmltools)
library(GGally)
library(installr)
library(scales)
library(rworldmap)
data <- read.csv("final_data.csv", sep = ";", stringsAsFactors = FALSE, na.strings = ".")
data <- data %>%
mutate(across(where(is.character), trimws))
print(head(data))
print(paste("Number of observations:", nrow(data)))
clean_data <- data %>%
filter(!is.na(Income_class))
print(head(clean_data))
print(paste("Number of observations:", nrow(clean_data)))
clean_data <- clean_data %>%
mutate(Income_class = factor(Income_class, levels = c("H", "UM", "LM", "L")))
density_plot <- ggplot(clean_data, aes(x = Median_Age, fill = Income_class)) +
geom_density(alpha = 0.5, color = "black") +
scale_fill_manual(values = c("H" = "red", "UM" = "green", "LM" = "blue", "L" ="orange")) +
labs(x = "Median age of population", fill = element_blank()) +
theme(legend.position = "top", legend.title = element_blank())
print(density_plot)
clean_data_present_continent <- clean_data[!is.na(clean_data$continent), ]
absolute_freq_barplot <- ggplot(clean_data_present_continent, aes(x = continent,
fill = Income_class)) + geom_bar(position = "stack") +
labs(x = "Continent", y = "Number of Countries", fill = "Income Class") +
theme_minimal()
print(absolute_freq_barplot)
relative_freq_plot <- ggplot(clean_data_present_continent, aes(x = continent, fill = Income_class)) +
geom_bar(position = "fill") +
labs(x = "Continent", y = "Proportion of Countries", fill = "Income Class") +
scale_y_continuous(labels = scales::percent) +
theme_minimal()
print(relative_freq_plot)
mosaicplot(table(clean_data_present_continent$continent,
clean_data_present_continent$Income_class),
main = "Mosaic Plot of Continents and Income Status",
xlab = "Continent",
ylab = "Income Class")
asia_data <- clean_data_present_continent[clean_data_present_continent$continent
== "Asia", ]
relative_freq_asia <- prop.table(table(asia_data$sub.region,
asia_data$Income_class), margin = 1)
relative_freq_df_asia <- as.data.frame(relative_freq_asia)
names(relative_freq_df_asia) <- c("Subcontinent", "Income_class", "Proportion")
relative_freq_plot_asia <- ggplot(relative_freq_df_asia, aes(x = Subcontinent,
y = Proportion, fill = Income_class)) +
geom_bar(stat = "identity", position = "fill") +
labs(x = "Subcontinent", y = "Proportion of Countries", fill = "Income Class")+
scale_y_continuous(labels = scales::percent) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(relative_freq_plot_asia)
boxplot_migration <- ggplot(clean_data_present_continent, aes(x = continent,
y=Migration_rate, fill = continent)) +  geom_boxplot() +
labs(x = "Continent", y = "Net Migration Rate", fill = "Continent") +
theme_minimal()
asia_largest_negative_outlier <- asia_data[which.max(asia_data$Migration_rate),
"Country"]
asia_largest_positive_outlier <- asia_data[which.min(asia_data$Migration_rate),
"Country"]
print(boxplot_migration)
cat("Largest Negative Outlier in Asia:", asia_largest_negative_outlier, "\n")
cat("Largest Positive Outlier in Asia:", asia_largest_positive_outlier, "\n")
subcontinent_migration <- clean_data_present_continent %>%
filter(!is.na(sub.region)) %>%
filter(!is.na(Migration_rate))
migration_boxplot <- ggplot(subcontinent_migration, aes(x = sub.region,
y = Migration_rate, fill = continent)) + geom_boxplot() +
facet_grid(~continent, scales = "free_x") +
labs(x = "Subcontinent", y = "Net Migration Rate", fill = "Continent") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(migration_boxplot)
library(forcats)
median_migration <- clean_data_present_continent %>%
group_by(sub.region) %>%
summarise(median_migration_rate = median(Migration_rate, na.rm = TRUE),
continent = first(continent)) %>%
ungroup() %>%
mutate(sub.region = fct_reorder(sub.region, median_migration_rate))
median_migration_plot <- ggplot(median_migration, aes(x = median_migration_rate,
y = sub.region, color = continent)) +
geom_point() +
labs(x = "Median Net Migration Rate", y = "Sub-Region", color = "Continent") +
scale_color_brewer(palette = "Set1") +
theme_minimal() +
theme(legend.position = "top")
print(median_migration_plot)
median_unemployment <- clean_data_present_continent %>%
group_by(sub.region) %>%
summarise(median_unemployment_rate = median(Youth_unemployment_rate, na.rm = TRUE),
continent = first(continent)) %>%
ungroup() %>%
mutate(sub.region = fct_reorder(sub.region, median_unemployment_rate))
median_unemployment_barplot <- ggplot(median_unemployment, aes(x = median_unemployment_rate,
y = sub.region, fill = continent)) +
geom_bar(stat = "identity", alpha = 0.7) +
labs(x = "Median Youth Unemployment Rate", y = "Sub-Region", fill = "Continent") +
scale_fill_brewer(palette = "Set1") +
theme_bw() +
theme(legend.position = "top")
print(median_unemployment_barplot)
iqr_unemployment <- clean_data_present_continent %>%
group_by(sub.region) %>%
summarise(
Q1 = quantile(Youth_unemployment_rate, 0.25, na.rm = TRUE),
Q3 = quantile(Youth_unemployment_rate, 0.75, na.rm = TRUE)
)
median_iqr_unemployment <- merge(median_unemployment, iqr_unemployment, by = "sub.region")
ggplot(median_iqr_unemployment, aes(x = median_unemployment_rate, y = sub.region, color = continent)) +
geom_point() +
geom_errorbar(aes(ymin = Q1, ymax = Q3), width = 0.2) +
labs(x = "Median Youth Unemployment Rate", y = "Sub-Region", color = "Continent") +
scale_color_brewer(palette = "Set1") +
theme_minimal() +
theme(legend.position = "top")
ggplot(clean_data, aes(x = Median_Age, y = Migration_rate, color = Income_class)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x = "Median Age", y = "Net Migration Rate", color = "Income Status") +
theme_minimal()
unemployment_migration_plot <- ggplot(clean_data_present_continent,
aes(x = Youth_unemployment_rate,
y = Migration_rate,
color = continent)) +
geom_point(size = 3, alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
labs(x = "Youth Unemployment Rate",
y = "Net Migration Rate",
color = "Continent") +
scale_color_brewer(palette = "Set1") +
theme_minimal() +
theme(legend.position = "top")
# Print the plot
print(unemployment_migration_plot)
population_data <- read.csv("population_data.csv")
population_data <- population_data %>%
select(Country.Code, Population = X2020..YR2020.)
head(population_data)
clean_data_present_continent <- clean_data_present_continent %>%
mutate(ISO_Code_3 = str_extract(ISO, "\\|([A-Z]{3})\\|") %>%
str_remove_all("\\|"))
head(clean_data_present_continent)
merged_data <- clean_data_present_continent %>%
left_join(population_data, by = c("ISO_Code_3" = "Country.Code"))
merged_data$Population <- as.numeric(as.character(merged_data$Population))
head(merged_data)
europe_data <- merged_data %>%
filter(continent == "Europe")
head(europe_data)
scatterplot_age_umeployment <- ggplot(europe_data, aes(x = Median_Age, y = Migration_rate, size = Population)) +
geom_point(alpha = 0.7) +
labs(
title="Scatterplot Median Age and Migration Rate Europe",
x = "Median Age",
y = "Migration Rate"
) +
theme(legend.position = "none")
print(scatterplot_age_umeployment)
world_plot_l <- ggplot(merged_data, aes(x = Median_Age, y = Migration_rate, size = Population, color = as.factor(continent), text = Country)) +
geom_point(alpha = 0.7) +
labs(
title = "Scatterplot of Median Age and Migration Rate for all Countries",
x = "Median Age",
y = "Migration Rate",
size = "Population",
color = "continent",
) +
theme(legend.position = "none")
interactive_plot_l <- ggplotly(world_plot_l, tooltip = c("text", "x", "y", "size"))
interactive_plot_l
ggparcoord(merged_data,
columns = c("Median_Age", "Youth_unemployment_rate", "Migration_rate"),
groupColumn = "Income_class",
order = 6:8,
showPoints = TRUE,
scale = "globalminmax",
title = "Parallel Coordinate Plot of all Countries",
alphaLines = 0.5)
data(countryExData)
merged_o <- countryExData %>%
left_join(merged_data, by = c("ISO3V10" = "ISO_Code_3"))
sPDF <-joinCountryData2Map(merged_o)
par(mai=c(0,0,0.2,0),xaxs="i",yaxs="i")
mapCountryData(sPDF, nameColumnToPlot="Median_Age", mapTitle="Median Age by Country", catMethod="fixedWidth", missingCountryCol="gray50")
merged_o
