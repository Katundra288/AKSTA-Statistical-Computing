filter(continent %in% "Americas") %>%
group_by(sub.region, Income_class) %>%
summarise(frequency = n(), .groups = 'drop') %>%
group_by(sub.region) %>%
mutate(relative_frequency = frequency / sum(frequency))
print(income_distribution_americas)
low_middle_income_americas <- df_vars %>%
filter(continent %in% "Americas" &
Income_class == "LM")
print(low_middle_income_americas)
table_of_average_values <- df_vars %>%
filter(!is.na(Income_class)) %>%
mutate(Income_class = factor(Income_class, levels = c("L", "LM", "UM", "H"))) %>%
group_by(Income_class) %>%
summarise(
Avg_Median_Age = mean(Median_Age, na.rm = TRUE),
Avg_Youth_Unemployment_Rate = mean(Youth_unemployment_rate, na.rm = TRUE),
Avg_Migration_Rate = mean(Migration_rate, na.rm = TRUE),
.groups = 'drop'
)
print(table_of_average_values)
table_of_sd_values <- df_vars %>%
filter(!is.na(Income_class)) %>%
mutate(Income_class = factor(Income_class, levels = c("L", "LM", "UM", "H"))) %>%
group_by(Income_class) %>%
summarise(
Sd_Median_Age = sd(Median_Age, na.rm = TRUE),
Sd_Youth_Unemployment_Rate = sd(Youth_unemployment_rate, na.rm = TRUE),
Sd_Migration_Rate = sd(Migration_rate, na.rm = TRUE),
.groups = 'drop'
)
print(table_of_sd_values)
table_of_average_values_continent <- df_vars %>%
filter(!is.na(Income_class)) %>%
mutate(Income_class = factor(Income_class, levels = c("L", "LM", "UM", "H"))) %>%
group_by(Income_class, continent) %>%
summarise(
Avg_Median_Age = mean(Median_Age, na.rm = TRUE),
Avg_Youth_Unemployment_Rate = mean(Youth_unemployment_rate, na.rm = TRUE),
Avg_Migration_Rate = mean(Migration_rate, na.rm = TRUE),
.groups = 'drop'
)
print(table_of_average_values_continent)
top_countries <- df_vars %>%
group_by(continent) %>%
mutate(
top_migration = quantile(Migration_rate, 0.75, na.rm = TRUE),
bottom_unempoyment = quantile(Youth_unemployment_rate, 0.25, na.rm = TRUE)
) %>%
filter(Migration_rate >= top_migration & Youth_unemployment_rate <= bottom_unempoyment) %>%
select(Country, continent, Migration_rate, Youth_unemployment_rate)
top_countries
write.table(df_vars, file = "final_data.csv", sep = ";", na = ".", row.names = FALSE, col.names = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(tidyr)
library(dplyr)
library(readxl)
library(data.table)
require(stringr)
median_age_data <- read.fwf("rawdata_343.txt", widths = c(8,66,4,18), skip=2)
names(median_age_data) <- c("Rank", "Country", "Median_Age")
median_age_data <- median_age_data[, c("Country", "Median_Age")]
head(median_age_data)
migration_data <- read.fwf("rawdata_347.txt", widths = c(8,64,6,18), skip=2)
names(migration_data) <- c("Rank", "Country", "Migration_rate", "Date")
migration_data <- migration_data[, c("Country", "Migration_rate")]
head(migration_data)
unemployment_data <- read.csv("rawdata_373.csv")
names(unemployment_data) <- c("Country", "Youth_unemployment_rate")
head(unemployment_data)
median_age_data$Country <- trimws(median_age_data$Country)
migration_data$Country <- trimws(migration_data$Country)
unemployment_data$Country <- trimws(unemployment_data$Country)
joined <- left_join(median_age_data, unemployment_data, by = join_by(Country))
joined_data <- left_join(joined, migration_data, by = join_by(Country == Country))
head(joined_data)
dim(joined_data)
income_data <- read_excel("OGHIST.xlsx", sheet="Country Analytical History", col_names = TRUE)
income_data <- income_data[, c("World Bank Analytical Classifications", "...36")]
income_data <- income_data[11:nrow(income_data), ]
names(income_data) <- c("Country", "Income_class")
head(income_data)
data <- left_join(joined_data, income_data, by = join_by(Country == Country))
head(data)
country_code <- fread("Country Data Codes.csv", sep = ",", header = TRUE, fill=TRUE, stringsAsFactors = FALSE, quote = "")
names(country_code)[names(country_code) == 'ISO 3166'] <- 'ISO'
names(country_code)[names(country_code) == 'Name'] <- 'Country'
country_code <- country_code %>%
mutate(
Country = ifelse(
str_detect(GENC, "[a-z]"),
paste(Country, GENC, sep = ", "),
Country
),
GENC = ifelse(
str_detect(GENC, "[a-z]"),
NA,
GENC
)
)
country_code <- country_code[, c("Country", "ISO")]
country_code <- country_code %>%
mutate(across(everything(), ~ str_replace_all(., '"', '')))
head(country_code)
country_code$Country <- trimws(country_code$Country)
country_code$ISO <- trimws(country_code$ISO)
data <- left_join(data, country_code, by = join_by(Country == Country))
names(data)[names(data) == 'ISO.y'] <- 'ISO'
data$ISO.x <- NULL
head(data)
continents <- read.csv("continents2.csv")
continents <- continents %>%
mutate(
country.code = str_pad(country.code, width = 3, pad = "0"),
# make 4 to 004, 12 to 012, leave 248
ISO = paste(alpha.2, alpha.3, country.code, sep = "|")
)
names(continents)[names(continents) == 'name'] <- 'Country'
continents
continents <- continents[, c("Country", "region", "sub.region", "ISO")]
head(continents)
df_vars <- left_join(data, continents, by = join_by(Country == Country))
names(df_vars)[names(df_vars) == 'ISO.x'] <- 'ISO'
df_vars$ISO.y <- NULL
dim(df_vars) # 227 Ã— 8
head(df_vars)
df_vars <- df_vars %>%
select(ISO, Country, region, sub.region, Income_class, Median_Age, Youth_unemployment_rate, Migration_rate)
names(df_vars)[names(df_vars) == "region"] <- "continent"
head(df_vars)
income_status_frequency <- df_vars %>%
count(Income_class, name = "frequency") %>%
mutate(
percentage = 100 * (frequency / sum(frequency))
)
print(income_status_frequency)
income_distribution_within_continent <- df_vars %>%
group_by(continent, Income_class) %>%
summarise(frequency = n(), .groups = 'drop')
income_distribution_within_continent <- income_distribution_within_continent %>%
group_by(continent) %>%
mutate(relative_frequency = frequency / sum(frequency))
print(income_distribution_within_continent)
unique_countries_in__their_group <- df_vars %>%
group_by(continent, Income_class) %>%
filter(n() == 1) %>%
ungroup()
print(unique_countries_in__their_group)
sub_region_counts_for_continents <- df_vars %>%
group_by(continent) %>%
summarise(number_of_sub_regions = n_distinct(sub.region), .groups = 'drop')
print(sub_region_counts_for_continents)
income_distribution_americas <- df_vars %>%
filter(continent %in% "Americas") %>%
group_by(sub.region, Income_class) %>%
summarise(frequency = n(), .groups = 'drop') %>%
group_by(sub.region) %>%
mutate(relative_frequency = frequency / sum(frequency))
print(income_distribution_americas)
low_middle_income_americas <- df_vars %>%
filter(continent %in% "Americas" &
Income_class == "LM")
print(low_middle_income_americas)
table_of_average_values <- df_vars %>%
filter(!is.na(Income_class)) %>%
mutate(Income_class = factor(Income_class, levels = c("L", "LM", "UM", "H"))) %>%
group_by(Income_class) %>%
summarise(
Avg_Median_Age = mean(Median_Age, na.rm = TRUE),
Avg_Youth_Unemployment_Rate = mean(Youth_unemployment_rate, na.rm = TRUE),
Avg_Migration_Rate = mean(Migration_rate, na.rm = TRUE),
.groups = 'drop'
)
print(table_of_average_values)
table_of_sd_values <- df_vars %>%
filter(!is.na(Income_class)) %>%
mutate(Income_class = factor(Income_class, levels = c("L", "LM", "UM", "H"))) %>%
group_by(Income_class) %>%
summarise(
Sd_Median_Age = sd(Median_Age, na.rm = TRUE),
Sd_Youth_Unemployment_Rate = sd(Youth_unemployment_rate, na.rm = TRUE),
Sd_Migration_Rate = sd(Migration_rate, na.rm = TRUE),
.groups = 'drop'
)
print(table_of_sd_values)
table_of_average_values_continent <- df_vars %>%
filter(!is.na(Income_class)) %>%
mutate(Income_class = factor(Income_class, levels = c("L", "LM", "UM", "H"))) %>%
group_by(Income_class, continent) %>%
summarise(
Avg_Median_Age = mean(Median_Age, na.rm = TRUE),
Avg_Youth_Unemployment_Rate = mean(Youth_unemployment_rate, na.rm = TRUE),
Avg_Migration_Rate = mean(Migration_rate, na.rm = TRUE),
.groups = 'drop'
)
print(table_of_average_values_continent)
top_countries <- df_vars %>%
group_by(continent) %>%
mutate(
top_migration = quantile(Migration_rate, 0.75, na.rm = TRUE),
bottom_unempoyment = quantile(Youth_unemployment_rate, 0.25, na.rm = TRUE)
) %>%
filter(Migration_rate >= top_migration & Youth_unemployment_rate <= bottom_unempoyment) %>%
select(Country, continent, Migration_rate, Youth_unemployment_rate)
top_countries
write.table(df_vars, file = "final_data.csv", sep = ";", na = ".", row.names = FALSE, col.names = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(tidyr)
library(dplyr)
library(readxl)
library(data.table)
require(stringr)
median_age_data <- read.fwf("rawdata_343.txt", widths = c(8,66,4,18), skip=2)
names(median_age_data) <- c("Rank", "Country", "Median_Age")
median_age_data <- median_age_data[, c("Country", "Median_Age")]
head(median_age_data)
migration_data <- read.fwf("rawdata_347.txt", widths = c(8,64,6,18), skip=2)
names(migration_data) <- c("Rank", "Country", "Migration_rate", "Date")
migration_data <- migration_data[, c("Country", "Migration_rate")]
head(migration_data)
unemployment_data <- read.csv("rawdata_373.csv")
names(unemployment_data) <- c("Country", "Youth_unemployment_rate")
head(unemployment_data)
median_age_data$Country <- trimws(median_age_data$Country)
migration_data$Country <- trimws(migration_data$Country)
unemployment_data$Country <- trimws(unemployment_data$Country)
joined <- left_join(median_age_data, unemployment_data, by = join_by(Country))
joined_data <- left_join(joined, migration_data, by = join_by(Country == Country))
head(joined_data)
dim(joined_data)
income_data <- read_excel("OGHIST.xlsx", sheet="Country Analytical History", col_names = TRUE)
income_data <- income_data[, c("World Bank Analytical Classifications", "...36")]
income_data <- income_data[11:nrow(income_data), ]
names(income_data) <- c("Country", "Income_class")
head(income_data)
data <- left_join(joined_data, income_data, by = join_by(Country == Country))
head(data)
country_code <- fread("Country Data Codes.csv", sep = ",", header = TRUE, fill=TRUE, stringsAsFactors = FALSE, quote = "")
names(country_code)[names(country_code) == 'ISO 3166'] <- 'ISO'
names(country_code)[names(country_code) == 'Name'] <- 'Country'
country_code <- country_code %>%
mutate(
Country = ifelse(
str_detect(GENC, "[a-z]"),
paste(Country, GENC, sep = ", "),
Country
),
GENC = ifelse(
str_detect(GENC, "[a-z]"),
NA,
GENC
)
)
country_code <- country_code[, c("Country", "ISO")]
country_code <- country_code %>%
mutate(across(everything(), ~ str_replace_all(., '"', '')))
head(country_code)
country_code$Country <- trimws(country_code$Country)
country_code$ISO <- trimws(country_code$ISO)
data <- left_join(data, country_code, by = join_by(Country == Country))
names(data)[names(data) == 'ISO.y'] <- 'ISO'
data$ISO.x <- NULL
head(data)
continents <- read.csv("continents2.csv")
continents <- continents %>%
mutate(
country.code = str_pad(country.code, width = 3, pad = "0"),
# make 4 to 004, 12 to 012, leave 248
ISO = paste(alpha.2, alpha.3, country.code, sep = "|")
)
names(continents)[names(continents) == 'name'] <- 'Country'
continents
continents <- continents[, c("Country", "region", "sub.region", "ISO")]
head(continents)
df_vars <- left_join(data, continents, by = join_by(Country == Country))
names(df_vars)[names(df_vars) == 'ISO.x'] <- 'ISO'
df_vars$ISO.y <- NULL
dim(df_vars) # 227 Ã— 8
head(df_vars)
df_vars <- df_vars %>%
select(ISO, Country, region, sub.region, Income_class, Median_Age, Youth_unemployment_rate, Migration_rate)
names(df_vars)[names(df_vars) == "region"] <- "continent"
head(df_vars)
income_status_frequency <- df_vars %>%
count(Income_class, name = "frequency") %>%
mutate(
percentage = 100 * (frequency / sum(frequency))
)
print(income_status_frequency)
income_distribution_within_continent <- df_vars %>%
group_by(continent, Income_class) %>%
summarise(frequency = n(), .groups = 'drop')
income_distribution_within_continent <- income_distribution_within_continent %>%
group_by(continent) %>%
mutate(relative_frequency = frequency / sum(frequency))
print(income_distribution_within_continent)
unique_countries_in__their_group <- df_vars %>%
group_by(continent, Income_class) %>%
filter(n() == 1) %>%
ungroup()
print(unique_countries_in__their_group)
sub_region_counts_for_continents <- df_vars %>%
group_by(continent) %>%
summarise(number_of_sub_regions = n_distinct(sub.region), .groups = 'drop')
print(sub_region_counts_for_continents)
income_distribution_americas <- df_vars %>%
filter(continent %in% "Americas") %>%
group_by(sub.region, Income_class) %>%
summarise(frequency = n(), .groups = 'drop') %>%
group_by(sub.region) %>%
mutate(relative_frequency = frequency / sum(frequency))
print(income_distribution_americas)
low_middle_income_americas <- df_vars %>%
filter(continent %in% "Americas" &
Income_class == "LM")
print(low_middle_income_americas)
table_of_average_values <- df_vars %>%
filter(!is.na(Income_class)) %>%
mutate(Income_class = factor(Income_class, levels = c("L", "LM", "UM", "H"))) %>%
group_by(Income_class) %>%
summarise(
Avg_Median_Age = mean(Median_Age, na.rm = TRUE),
Avg_Youth_Unemployment_Rate = mean(Youth_unemployment_rate, na.rm = TRUE),
Avg_Migration_Rate = mean(Migration_rate, na.rm = TRUE),
.groups = 'drop'
)
print(table_of_average_values)
table_of_sd_values <- df_vars %>%
filter(!is.na(Income_class)) %>%
mutate(Income_class = factor(Income_class, levels = c("L", "LM", "UM", "H"))) %>%
group_by(Income_class) %>%
summarise(
Sd_Median_Age = sd(Median_Age, na.rm = TRUE),
Sd_Youth_Unemployment_Rate = sd(Youth_unemployment_rate, na.rm = TRUE),
Sd_Migration_Rate = sd(Migration_rate, na.rm = TRUE),
.groups = 'drop'
)
print(table_of_sd_values)
table_of_average_values_continent <- df_vars %>%
filter(!is.na(Income_class)) %>%
mutate(Income_class = factor(Income_class, levels = c("L", "LM", "UM", "H"))) %>%
group_by(Income_class, continent) %>%
summarise(
Avg_Median_Age = mean(Median_Age, na.rm = TRUE),
Avg_Youth_Unemployment_Rate = mean(Youth_unemployment_rate, na.rm = TRUE),
Avg_Migration_Rate = mean(Migration_rate, na.rm = TRUE),
.groups = 'drop'
)
print(table_of_average_values_continent)
top_countries <- df_vars %>%
group_by(continent) %>%
mutate(
top_migration = quantile(Migration_rate, 0.75, na.rm = TRUE),
bottom_unempoyment = quantile(Youth_unemployment_rate, 0.25, na.rm = TRUE)
) %>%
filter(Migration_rate >= top_migration & Youth_unemployment_rate <= bottom_unempoyment) %>%
select(Country, continent, Migration_rate, Youth_unemployment_rate)
top_countries
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(tidyr)
library(dplyr)
library(readxl)
library(data.table)
require(stringr)
median_age_data <- read.fwf("rawdata_343.txt", widths = c(8,66,4,18), skip=2)
names(median_age_data) <- c("Rank", "Country", "Median_Age")
median_age_data <- median_age_data[, c("Country", "Median_Age")]
head(median_age_data)
migration_data <- read.fwf("rawdata_347.txt", widths = c(8,64,6,18), skip=2)
names(migration_data) <- c("Rank", "Country", "Migration_rate", "Date")
migration_data <- migration_data[, c("Country", "Migration_rate")]
head(migration_data)
unemployment_data <- read.csv("rawdata_373.csv")
names(unemployment_data) <- c("Country", "Youth_unemployment_rate")
head(unemployment_data)
median_age_data$Country <- trimws(median_age_data$Country)
migration_data$Country <- trimws(migration_data$Country)
unemployment_data$Country <- trimws(unemployment_data$Country)
joined <- left_join(median_age_data, unemployment_data, by = join_by(Country))
joined_data <- left_join(joined, migration_data, by = join_by(Country == Country))
head(joined_data)
dim(joined_data)
income_data <- read_excel("OGHIST.xlsx", sheet="Country Analytical History", col_names = TRUE)
income_data <- income_data[, c("World Bank Analytical Classifications", "...36")]
income_data <- income_data[11:nrow(income_data), ]
names(income_data) <- c("Country", "Income_class")
head(income_data)
data <- left_join(joined_data, income_data, by = join_by(Country == Country))
head(data)
country_code <- fread("Country Data Codes.csv", sep = ",", header = TRUE, fill=TRUE, stringsAsFactors = FALSE, quote = "")
names(country_code)[names(country_code) == 'ISO 3166'] <- 'ISO'
names(country_code)[names(country_code) == 'Name'] <- 'Country'
country_code <- country_code %>%
mutate(
Country = ifelse(
str_detect(GENC, "[a-z]"),
paste(Country, GENC, sep = ", "),
Country
),
GENC = ifelse(
str_detect(GENC, "[a-z]"),
NA,
GENC
)
)
country_code <- country_code[, c("Country", "ISO")]
country_code <- country_code %>%
mutate(across(everything(), ~ str_replace_all(., '"', '')))
head(country_code)
country_code$Country <- trimws(country_code$Country)
country_code$ISO <- trimws(country_code$ISO)
data <- left_join(data, country_code, by = join_by(Country == Country))
names(data)[names(data) == 'ISO.y'] <- 'ISO'
data$ISO.x <- NULL
head(data)
continents <- read.csv("continents2.csv")
continents <- continents %>%
mutate(
country.code = str_pad(country.code, width = 3, pad = "0"),
ISO = paste(alpha.2, alpha.3, country.code, sep = "|")
)
names(continents)[names(continents) == 'name'] <- 'Country'
continents
continents <- continents[, c("Country", "region", "sub.region", "ISO")]
head(continents)
df_vars <- left_join(data, continents, by = join_by(Country == Country))
names(df_vars)[names(df_vars) == 'ISO.x'] <- 'ISO'
df_vars$ISO.y <- NULL
dim(df_vars)
head(df_vars)
df_vars <- df_vars %>%
select(ISO, Country, region, sub.region, Income_class, Median_Age, Youth_unemployment_rate, Migration_rate)
names(df_vars)[names(df_vars) == "region"] <- "continent"
head(df_vars)
income_status_frequency <- df_vars %>%
count(Income_class, name = "frequency") %>%
mutate(
percentage = 100 * (frequency / sum(frequency))
)
print(income_status_frequency)
income_distribution_within_continent <- df_vars %>%
group_by(continent, Income_class) %>%
summarise(frequency = n(), .groups = 'drop')
income_distribution_within_continent <- income_distribution_within_continent %>%
group_by(continent) %>%
mutate(relative_frequency = frequency / sum(frequency))
print(income_distribution_within_continent)
unique_countries_in__their_group <- df_vars %>%
group_by(continent, Income_class) %>%
filter(n() == 1) %>%
ungroup()
print(unique_countries_in__their_group)
sub_region_counts_for_continents <- df_vars %>%
group_by(continent) %>%
summarise(number_of_sub_regions = n_distinct(sub.region), .groups = 'drop')
print(sub_region_counts_for_continents)
income_distribution_americas <- df_vars %>%
filter(continent %in% "Americas") %>%
group_by(sub.region, Income_class) %>%
summarise(frequency = n(), .groups = 'drop') %>%
group_by(sub.region) %>%
mutate(relative_frequency = frequency / sum(frequency))
print(income_distribution_americas)
low_middle_income_americas <- df_vars %>%
filter(continent %in% "Americas" &
Income_class == "LM")
print(low_middle_income_americas)
table_of_average_values <- df_vars %>%
filter(!is.na(Income_class)) %>%
mutate(Income_class = factor(Income_class, levels = c("L", "LM", "UM", "H"))) %>%
group_by(Income_class) %>%
summarise(
Avg_Median_Age = mean(Median_Age, na.rm = TRUE),
Avg_Youth_Unemployment_Rate = mean(Youth_unemployment_rate, na.rm = TRUE),
Avg_Migration_Rate = mean(Migration_rate, na.rm = TRUE),
.groups = 'drop'
)
print(table_of_average_values)
table_of_sd_values <- df_vars %>%
filter(!is.na(Income_class)) %>%
mutate(Income_class = factor(Income_class, levels = c("L", "LM", "UM", "H"))) %>%
group_by(Income_class) %>%
summarise(
Sd_Median_Age = sd(Median_Age, na.rm = TRUE),
Sd_Youth_Unemployment_Rate = sd(Youth_unemployment_rate, na.rm = TRUE),
Sd_Migration_Rate = sd(Migration_rate, na.rm = TRUE),
.groups = 'drop'
)
print(table_of_sd_values)
table_of_average_values_continent <- df_vars %>%
filter(!is.na(Income_class)) %>%
mutate(Income_class = factor(Income_class, levels = c("L", "LM", "UM", "H"))) %>%
group_by(Income_class, continent) %>%
summarise(
Avg_Median_Age = mean(Median_Age, na.rm = TRUE),
Avg_Youth_Unemployment_Rate = mean(Youth_unemployment_rate, na.rm = TRUE),
Avg_Migration_Rate = mean(Migration_rate, na.rm = TRUE),
.groups = 'drop'
)
print(table_of_average_values_continent)
top_countries <- df_vars %>%
group_by(continent) %>%
mutate(
top_migration = quantile(Migration_rate, 0.75, na.rm = TRUE),
bottom_unempoyment = quantile(Youth_unemployment_rate, 0.25, na.rm = TRUE)
) %>%
filter(Migration_rate >= top_migration & Youth_unemployment_rate <= bottom_unempoyment) %>%
select(Country, continent, Migration_rate, Youth_unemployment_rate)
top_countries
